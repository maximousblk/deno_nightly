name: Build and Release

on: 
  workflow_dispatch: # manual trigger
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    name: build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full

    steps:

      - name: Get current date
        uses: 1466587594/get-current-time@v1
        id: now
        with:
          format: YYYY.MM.DD

      - name: Enable long paths on windows

        # Get your shit together windows.
        # Get it all together. 
        # And put it in a backpack.
        # All your shit.
        # So it’s together.
        # And if you gotta take it somewhere, take it somewhere,
        # you know, take it to the shit store and sell it… 
        # Or put it in a shit museum,
        # I don’t care what you do, you just gotta get it together.
        
        if: startsWith(matrix.os, 'windows')
        run: git config --global core.longpaths true

      - name: Clone repository
        uses: actions/checkout@v2
        with:
          repository: 'denoland/deno'
          fetch-depth: 1
          submodules: true

      - name: Get commit hash
        run: git rev-parse HEAD | tee commithash

      - name: Upload commit hash to artifacts
        uses: actions/upload-artifact@v2
        with:
          path: commithash

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: 1.45.0

      - name: Build release
        run: |
          cargo build --release --locked --all-targets
          ls target/release

      - name: zip linux release
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          cd target/release
          mv deno deno-nightly
          zip -r deno-nightly-x86_64-unknown-linux-gnu.zip deno-nightly
          ./deno-nightly types > lib.deno-nightly.d.ts

      - name: Upload linux release to artifacts
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.os, 'ubuntu')
        with:
          path: |
            target/release/deno-nightly-x86_64-unknown-linux-gnu.zip
            target/release/lib.deno-nightly.d.ts
          if-no-files-found: error

      - name: zip mac release
        if: startsWith(matrix.os, 'macOS')
        run: |
          cd target/release
          mv deno deno-nightly
          zip -r deno-nightly-x86_64-apple-darwin.zip deno-nightly

      - name: Upload mac release to artifacts
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.os, 'macOS')
        with:
          path: target/release/deno-nightly-x86_64-apple-darwin.zip
          if-no-files-found: error

      - name: zip windows release
        if: startsWith(matrix.os, 'windows')
        run: |
          cd target/release
          Rename-Item -Path "deno.exe" -NewName "deno-nightly.exe"
          Compress-Archive -CompressionLevel Optimal -Force -Path deno-nightly.exe -DestinationPath deno-nightly-x86_64-pc-windows-msvc.zip

      - name: Upload windows release to artifacts
        uses: actions/upload-artifact@v2
        if: startsWith(matrix.os, 'windows')
        with:
          path: target/release/deno-nightly-x86_64-pc-windows-msvc.zip
          if-no-files-found: error

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Dated Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.now.outputs.formattedTime }}
          prerelease: false
          title: ${{ steps.now.outputs.formattedTime }}
          files: artifact/*

      - name: Latest Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: latest
          prerelease: true
          title: latest
          files: artifact/*
